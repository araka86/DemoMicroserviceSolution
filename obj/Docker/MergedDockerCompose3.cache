name: dockercompose1803886584445881572
services:
  customerdb:
    container_name: customer-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: 123!@#QWEqwe
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "8001"
      protocol: tcp
  customerwebapi:
    build:
      context: F:\Docker\comtainer6BazorMssql\DemoMicroserviceSolution
      dockerfile: CustomerWebApi/Dockerfile
    container_name: customer-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: customerdb
      DB_NAME: customertable
      DB_SA_PASSWORD: 123!@#QWEqwe
    image: customerwebapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8002"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "8003"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Ruslan\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Ruslan\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
networks:
  backend:
    name: dockercompose1803886584445881572_backend